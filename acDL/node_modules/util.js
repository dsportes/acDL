String.prototype.startsWith = function(str) {
	return (!str || (this.length >= str.length && this.substring(0, str.length) == str));
}
String.prototype.endsWith = function(str) {
	return (!str || (this.length >= str.length && this.substring(this.length - str.length) == str));
}
/*****************************************************/
function StringBuffer() { this.buffer = []; }
StringBuffer.prototype.append = function append(string) { this.buffer.push(string); return this; };
StringBuffer.prototype.toString = function toString() { return this.buffer.join(""); };
StringBuffer.prototype.join = function join(arg) { return this.buffer.join(arg); };
StringBuffer.prototype.isEmpty = function isEmpty() { return this.buffer.length != 0; };
StringBuffer.prototype.clear = function clear() { this.buffer = []; };
/*****************************************************/
Date.prototype.format = function(format) {
	var fullYear = this.getYear();
	if (fullYear < 1000)
		fullYear = fullYear + 1900;
	var hour = this.getHours();
	var day = this.getDate();
	var month = this.getMonth() + 1;
	var minute = this.getMinutes();
	var seconde = this.getSeconds();
	var ms = this.getMilliseconds();
	var reg = new RegExp('(d|m|Y|H|i|s|S)', 'g');
	var replacement = new Array();
	replacement['d'] = day < 10 ? '0' + day : day;
	replacement['m'] = month < 10 ? '0' + month : month;
	replacement['S'] = ms < 10 ? '00' + ms : (ms < 100 ? '0' + ms : ms);
	replacement['Y'] = fullYear;
	replacement['H'] = hour < 10 ? '0' + hour : hour;
	replacement['i'] = minute < 10 ? '0' + minute : minute;
	replacement['s'] = seconde < 10 ? '0' + seconde : seconde;
	return format.replace(reg, function($0) {
		return ($0 in replacement) ? replacement[$0] : $0.slice(1, $0.length - 1);
	});
};

Date.prototype.hhmmss = function() { return this.format("His"); };

Date.prototype.aammjj = function(){	return parseInt(this.format("Ymd")); };

Date.prototype.stdFormat = function() { return this.format("Y-m-d H:i:s.S"); };

Date.prototype.dumpName = function() { return this.format("YmdHis"); };

/************************************************************/

AC = { desktop:null, dirpanels:[null, null, null]};

var events = require('events');
AC.eventEmitter = new events.EventEmitter();
AC.fs = require("fs");
AC.decoder = new TextDecoder("utf-8");
AC.jszip = require("jszip");

AC.Util = {
	ptd : function(path){
		if (path.length == 0) return -1;
		var t = path.charAt(0);
		return t == "P" ? 0 : (t == "T" ? 1 : (t == "D" ? 2 : -1));
	},
	editDH : function(dh){
		if (dh.length != 14) return null;
		try {
			var x = parseInt(dh, 10);
			if (x < 20120101000000 || x > 20991231235959) return;
			return dh.substring(0,4) + "-" + dh.substring(4,6) + "-" + dh.substring(6,8) + " "
			+ dh.substring(8,10) + ":" + dh.substring(10,12) + ":" + dh.substring(12,14);
		} catch (e) { return null; };
	}
}
